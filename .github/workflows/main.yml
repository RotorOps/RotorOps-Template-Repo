name: Deploy RotorOps Templates

on:
  push:
    branches:
      - main

jobs:

  Map-and-Deploy:

    runs-on: ubuntu-latest
    name: Map-and-Deploy

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML
        
    - name: Run script
      run: |
        python module-mapper.py

    - name: Archive map file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: module-map-file
        path: module-map-v2.yaml
          
    - name: FTP-Deploy
      uses: actions/checkout@v2.1.0
      with:
        fetch-depth: 2
        
    - name: FTP-Deploy-Action
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: modules/

    - name: Download bundle
      uses: actions/download-artifact@master
      with:
        name: module-map-file # Download artifact named...
        path: dist # Optional, downloads to current working directory under folder {artifact_name} if not specified

    - name: Deploy dist folder
      uses: isthatcentered/dist-to-ftp@master
      with:
        user: ${{ secrets.FTP_USERNAME }} # Ftp user Ex:
        password: ${{ secrets.FTP_PASSWORD }} # Ftp password Ex:
        host: ${{ secrets.FTP_SERVER }} # Ftp host Ex:
        path: dist # Folder to deploy Ex: apps/frontend/dist or dist
        into: modules # Where to place the files in your ftp
        cleanupExisting: false # (Optional), Remove already existing files inside FTP destination folder (`into` parameter)

    - name: Get monitored changed files
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        json: "true"
        files: |
          forces/**
          import/**
          scenario/**


    - name: Build a list of urls from changed files #the string manipulation below can likely be removed if setting the changed-files json option to false
      id: format-urls
      run: |
        echo "changed_files=${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_ENV
        arrstring=${{ steps.changed-files.outputs.all_changed_files }}
        farrstring=$(echo $arrstring | sed -e 's/\[//g' -e 's/\]//g' -e 's/\,//g')
        files_arr=($farrstring)
        urls=""
        for file in ${files_arr[@]}; do
          file=$(echo $file | sed -e 's/"//g')
          echo "$file was changed"
          urls+="'https://dcs-helicopters.com/user-files/modules/$file',"
        done
        echo "URLS=${urls}"
        echo "URLS=${urls}" >> $GITHUB_ENV

    - name: Print URLs
      run: echo ${{ env.URLS }}

    - name: Purge CDN Cache
      uses: wei/curl@v1
      with:
        args: |
          --location --request POST 'https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ secrets.CLOUDFLARE_API_KEY }}' \
          --data-raw '{"files": [${{ env.URLS }}]}'
        
